<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.nachojang.mapper.BoardMapper">
	
	<!-- 우림) 상품상세 -> 댓글 목록 : customer/goodsOne -->
	<select id="selectBoardListByGoodsOne"
			parameterType="Integer">
		SELECT 
		    g.goods_no goodsNo
		    , b.orders_no ordersNo
		    , c.customer_mail customerMail
		    , b.board_content boardContent
		    , b.create_date createDate
		FROM 
		    board b
		JOIN 
		    orders o ON b.orders_no = o.orders_no
		JOIN 
		    goods g ON o.goods_no = g.goods_no
		JOIN 
		    payment p ON o.payment_no = p.payment_no
		JOIN 
		    address a ON p.address_no = a.address_no
		JOIN
			customer c ON c.customer_mail = a.customer_mail
		WHERE g.goods_no = ${goodsNo}
		ORDER BY b.create_date DESC
	</select>
	
	<!-- 세영) 고객의 주문 상품 댓글 출력 -->
	<select id="selectBoardByOrdersNo" resultType="Map" parameterType="Integer">
		SELECT 
			count(*) cnt
			, orders_no ordersNo
			, board_content boardContent
		FROM board
		WHERE orders_no = #{ordersNo}
	</select>
	
	<!-- 세영) 댓글 추가 -->
	<insert id="insertBoard" parameterType="com.example.nachojang.vo.Board">
		INSERT INTO board(
				orders_no, board_content
		) VALUES (
				#{ordersNo}, #{boardContent}
		)
	</insert>
	
	<!-- 세영) 댓글 삭제 -->
	<delete id="deleteBoard" parameterType="Integer">
		DELETE FROM board
		WHERE orders_no = #{ordersNo}
	</delete>

	<!-- 세영) 총 댓글 갯수 -->
	<select id="selectTotalBoard" parameterType="Integer">
		SELECT 
			COUNT(*)
		FROM
		    board b
		JOIN 
		    orders o ON b.orders_no = o.orders_no
		JOIN 
		    goods g ON o.goods_no = g.goods_no
		JOIN 
		    payment p ON o.payment_no = p.payment_no
		JOIN 
		    address a ON p.address_no = a.address_no
		JOIN
			 customer c ON c.customer_mail = a.customer_mail     
	</select>
		
	<!-- 세영) 댓글 목록을 페이징하여 반환하는 쿼리 -->
	<select id="selectBoardList" parameterType="Map" resultType="Map">
		SELECT 
		    g.goods_no goodsNo
		    , b.orders_no ordersNo
		    , c.customer_mail customerMail
		    , b.board_content boardContent
		    , b.create_date createDate
		FROM 
		    board b
		JOIN 
		    orders o ON b.orders_no = o.orders_no
		JOIN 
		    goods g ON o.goods_no = g.goods_no
		JOIN 
		    payment p ON o.payment_no = p.payment_no
		JOIN 
		    address a ON p.address_no = a.address_no
		JOIN
			customer c ON c.customer_mail = a.customer_mail 
		ORDER BY b.create_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>

</mapper>